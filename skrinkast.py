# Создаём сокет с сайтом Яндекс, чтобы послать какой то запрос

import socket
import threading
from time import sleep




######### 1 - открываем сокет
#присваемаем сокет
# по умолчанию soсket создаётся TCP в адресном пространстве ipV4
ya_sock = socket.socket()


    # Как выбрать другое адресное пространство
    # ya_sock = socket.socket(socket.AF_INET6) ipV6
    # также выбирается UDP подключение (вспоминаем TCP пакетики сохраняет, чекает пропуски, UDP поток)


#производим коннект сокета
##в качества параметра должен передаваться параметры ip адресс и порт
addr = ("87.250.250.242", 443) #443 порт - порт HTTPS
ya_sock.connect(addr)

#запускаем код
#запускаем Wireshark, ставим фильтр по ip адрессу
# наблюдаем результат соеденения по сокету

################# 2 - запрос
#теперь отправим туда что-либо
# готовим http запрос (отправляеться str в двоичном виде)

data_out = b"GET / HTTP/1.1\r\nHost:ya.ru\r\n\r\n" #символ b перевод в двоичный вид
#GET - метод запрос, | /url запроса (вызов конкретного приложения) | HTTP/1.1 - формат http
#\r\n - перевод коректки
#в таком виде L7 уровне улетает запрос от приложения
ya_sock.send(data_out)



########### 3 - получаем данные
#перехватываем ответ

#(в качестве параметра передаётся буфер-по скольку байт будет захватываться с сетевой карты)
# data_in = ya_sock.recv(1024)
# print(data_in)
# data_in = ya_sock.recv(1024)
# print(data_in)
# data_in = ya_sock.recv(1024)
# print(data_in)
# data_in = ya_sock.recv(1024)
# print(data_in)
#делаем много чанков
# print(data_in)

# делаем цикл
# но в данном варианте цикл будет захватывать консоль
# делаем функцию

data_in = b"" #задаём переменную которая будет принимать значения в двоичном коде

def recieving():
    global data_in #делаем видимой вне цикла
    while True:
        data_chunk = ya_sock.recv(1024)
        data_in = data_in + data_chunk

# импортируем библиотеку threading
# создаём отдельный поток (в качестве параметра имя функции без скобок)
rec_thread = threading.Thread(target=recieving)
rec_thread.start() #необходимо специально стартануть

#но далее print сработает совсем сразу, поэтому просим его sleep 4 сек (библиотека from time import sleep)
sleep(4);
print(data_in)

ya_sock.close()

#как найти край кода? Инструмент разработчки